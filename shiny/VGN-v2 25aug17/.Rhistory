runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-1')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-2')
runApp('In Class Notes/R Data Science/shiny tutorial/App-3 controls test')
runApp('In Class Notes/R Data Science/shiny tutorial/App-3 UI controls test')
runApp('In Class Notes/R Data Science/shiny tutorial/App-3 UI controls test')
runApp('In Class Notes/R Data Science/shiny tutorial/App-3 UI controls test')
runApp('In Class Notes/R Data Science/shiny tutorial/App-3 UI controls test')
shiny::runApp('In Class Notes/R Data Science/shiny tutorial/census-app')
runApp('In Class Notes/R Data Science/shiny tutorial/census-app')
2 ** 100
2 ** 2
q()
sqrt(01)
sqrt(-1)
getwd()
load("D:/Vermont EPSCoR Personal Archive/OwnCloud/implementation networks/data/Yr 2 2015/PT centralities 2015 workspace.RData")
library(igraph)
libary(dplyr)
library(dplyr)
View(data.frame(V(pt.tax.incent.net)))
V(pt.tax.incent.net)
graph.density(pt.tax.incent.net)
length(V(pt.tax.incent.net))
length(E(pt.tax.incent.net))
View(pt.raw.df)
tax.incent <- data.frame(pt.raw.df[,1])
View(tax.incent)
tax.incent <- cbind(tax.incent, pt.raw.df$Tool.Providers..Administer.tax.incentives)
tax.incent <- cbind(tax.incent, pt.raw.df$Tool.Facilitators..Administer.tax.incentives)
tax.incent <- cbind(tax.incent, pt.raw.df$Tool.Recipients..Administer.tax.incentives)
tax.incent <- pt.raw.df[, c(1,11,23,35)]
tax.incent.2 <- filter(pt.raw.df, pt.raw.df[11] == 1 | pt.raw.df[23] == 1 | pt.raw.df[35] == 1)
tax.incent.2
View(tax.incent.2)
pt <- 10
multi.mat.df <- raw.pt.df
multi.mat.df <- pt.raw.df
row.limited.mat <- filter( multi.mat.df, multi.mat.df[pt+1] == 1 | multi.mat.df[pt+13] == 1 | multi.mat.df[pt+25] == 1 )
View(row.limited.mat)
multi.mat.df <- pt.collaborative.2015
row.limited.mat <- filter( multi.mat.df, multi.mat.df[pt+1] == 1 | multi.mat.df[pt+13] == 1 | multi.mat.df[pt+25] == 1 )
ns.df <- row.limited.mat[-c(2:37)]
num.init <- nrow(ns.df)
num.respond <- ncol(ns.df)
write.row <- 1
edge.list <- data.frame()
for( init in 1:num.init ) {
for( respond in 2:num.respond ) {
if ( ( ns.df[init,respond] >= 1 ) & ( colnames(ns.df)[respond] %in% ns.df$org.name) ) {
edge.list[write.row, 1] <- ns.df[init, 1]
edge.list[write.row, 2] <- colnames(ns.df)[respond]
write.row <- write.row + 1
}
}
}
colnames(edge.list) <- c("from", "to")
View(edge.list)
pt <- 1
row.limited.mat <- filter( multi.mat.df, multi.mat.df[pt+1] == 1 | multi.mat.df[pt+13] == 1 | multi.mat.df[pt+25] == 1 )
graph.density(pt.cons.ease.net)
el <- multi.mat.prep.pt(pt.collaborative.2015, 10)
pt.tax.incent.leg.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
length(E(pt.tax.incent.leg.net))
length(V(pt.tax.incent.leg.net))
el <- multi.mat.prep.pt(pt.collaborative.2015, 1)
pt.cons.ease.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 2)
pt.enforce.reg.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 3)
pt.pub.info.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 4)
pt.permit.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 5)
pt.grants.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 6)
pt.cost.share.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 7)
pt.loans.guarantees.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 8)
pt.contracts.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 9)
pt.tech.assist.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 10)
pt.tax.incent.leg.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 11)
pt.litigation.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
el <- multi.mat.prep.pt(pt.collaborative.2015, 12)
pt.comm.act.net <- graph.data.frame(el,
directed = F##,
##  vertices = org.list.pt
)
length(V(pt.cons.ease.net))
length(V(pt.enforce.reg.net))
length(V(pt.pub.info.net))
length(V(pt.permit.net))
length(V(pt.permits.net))
length(V(pt.grants.net))
length(V(pt.cost.share.net))
length(V(pt.loans.guarantees.net))
two <- 2l
two <- 2L
one <- 1L
one / two
test <- one / two
clear
rm(ls())
?rm()
rm(list = ls())
exit
exit()
close()
quit*()
quit()
2** 2
quit
quit()
f <- read.table(file.choose())
View(f)
f <- read.dcf(file.choose())
f <- file(file.choose())
f
open(f)
f
vec <- f
vec <- as.vector(f)
vec
source('~/.active-rstudio-document')
f <- file(file.choose())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(i,vec)
source('~/.active-rstudio-document')
line[1]
line <- "2 15"
line[1]
text <- "Able was I, ere I saw Elba!"
text.1 <- gsub('[punct]',",text.1)
text.1 <- gsub('[:punct:]',text.1)
text.1 <- gsub('[[:punct:]]',"",text.1)
text.1 <- gsub('[[:punct:]]',"",text)
text.1 <- gsub('[[:space:]]',"",text)
text.1 <- gsub('[[:punct:]]',"",text)
text.2 <- gsub('[[:punct:]]',"",text.1)
text.2 <- gsub('[[:space:]]',"",text.1)
text.3 <- tolower(text.2)
text.4 <- "1 2 3 4 -5 6"
strsplit(text.4, split = " ")
as.vector(strsplit(text.4, split = " "))
unlist(strsplit(text.4, split = " "))
vec <- unlist(strsplit(text.4, split = " "))
vec <- as.numeric(unlist(strsplit(text.4, split = " ")))
substr(text.3,start = 1,stop = 1)
substr(text.3,start = 1,stop = 1)
substr(text.3,start = nchar(text.3),stop = (text.3))
substr(text.3,start = nchar(text.3),stop = nchar(text.3))
i <- 0
first <- substr(text.3,
start = i + 1,
stop = i + 1
)
i <- 2
first <- substr(text.3,
start = i + 1,
stop = i + 1
)
last <- substr(text.3,
start = nchar(text.3) - i,
stop = nchar(text.3) - i
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
text <- "Able was I, ere saw Elba!"
source('~/.active-rstudio-document')
pal
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
is.pal <- function(text) {
text.1 <- gsub('[[:punct:]]',
"",
text
)
text.2 <- gsub('[[:space:]]',
"",
text.1
)
text.3 <- tolower(text.2)
i <- 0
pal <- T
while ( ( i + 1) < ( nchar(text.3) - i ) ) {
first <- substr(text.3,
start = i + 1,
stop = i + 1
)
last <- substr(text.3,
start = nchar(text.3) - i,
stop = nchar(text.3) - i
)
if ( first != last ) {
pal <- F
}
i <- i + 1
}
if ( pal ) {
return("Y")
} else {
return("N")
}
}
is.pal(text)
text <- "Able was Ii, ere i saw Elba!"
is.pal(text)
cat(pal)
cat(is.pal(text = text))
source('~/.active-rstudio-document')
?cat
source('~/.active-rstudio-document')
is.pal <- function(text) {
text.1 <- gsub('[[:punct:]]',
"",
text
)
text.2 <- gsub('[[:space:]]',
"",
text.1
)
text.3 <- tolower(text.2)
i <- 0
pal <- T
while ( ( i + 1) < ( nchar(text.3) - i ) ) {
first <- substr(text.3,
start = i + 1,
stop = i + 1
)
last <- substr(text.3,
start = nchar(text.3) - i,
stop = nchar(text.3) - i
)
if ( first != last ) {
pal <- F
}
i <- i + 1
}
if ( pal ) {
return("Y")
} else {
return("N")
}
}
is.pal(text)
cat(is.pal(text))
text <- "Able was I, ere i saw Elba!"
cat(is.pal(text))
is.pal(text)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
phrase <- "1 9 2 -7 10 4 3"
vec <- as.numeric(unlist(strsplit(phrase,
split = " "
)
)
)
length(vec)
max.diff <- 0
for ( i in 1:length(vec)) {
for ( j in 1:length(vec)) {
if ( ( vec[i] - vec[j] ) > max.diff )
max.diff <- vec[i] - vec[j]
}
}
source('~/.active-rstudio-document')
vec <- data.frame(unlist(strsplit(phrase,
split = " "
) ) )
max.diff <- 0
vec
vec[,2] <- vec[1,1] - vec
vec[1,1]
vec[1]
vec <- as.vector(unlist(strsplit(phrase,
split = " "
) ) )
df <- data.frame(vec)
df
df[,2] <- df[1,1] - df
df[,2] <- df[1,1] - df[,1]
View(df)
?str
?setNames
tmp <- 1:3
names(tmp) <- c("foo", "bar", "baz")
tmp["foo"]
result <- tmp["foo"]
tmp$foo
result <- unname(result)
comp <- c("foo" = 1, "bar" = 2, "baz" = 3)
county.fips.ca <- c("Alameda"="06001",
"Alpine"="06003",
"Amador"="06005",
"Butte"="06007",
"Calaveras"="06009",
"Colusa"="06011",
"Contra Costa"="06013",
"Del Norte"="06015",
"El Dorado"="06017",
"Fresno"="06019",
"Glenn"="06021",
"Humboldt"="06023",
"Imperial"="06025",
"Inyo"="06027",
"Kern"="06029",
"Kings"="06031",
"Lake"="06033",
"Lassen"="06035",
"Los Angeles"="06037",
"Madera"="06039",
"Marin"="06041",
"Mariposa"="06043",
"Mendocino"="06045",
"Merced"="06047",
"Modoc"="06049",
"Mono"="06051",
"Monterey"="06053",
"Napa"="06055",
"Nevada"="06057",
"Orange"="06059",
"Placer"="06061",
"Plumas"="06063",
"Riverside"="06065",
"Sacramento"="06067",
"San Benito"="06069",
"San Bernardino"="06071",
"San Diego"="06073",
"San Francisco"="06075",
"San Joaquin"="06077",
"San Luis Obispo"="06079",
"San Mateo"="06081",
"Santa Barbara"="06083",
"Santa Clara"="06085",
"Santa Cruz"="06087",
"Shasta"="06089",
"Sierra"="06091",
"Siskiyou"="06093",
"Solano"="06095",
"Sonoma"="06097",
"Stanislaus"="06099",
"Sutter"="06101",
"Tehama"="06103",
"Trinity"="06105",
"Tulare"="06107",
"Tuolumne"="06109",
"Ventura"="06111",
"Yolo"="06113",
"Yuba"="06115"
)
county.fips.ca["Alameda"]
tmp.2 <- names(tmp)
names(tmp.2) <- tmp
tmp.2[1]
data.frame(tmp.2[1])
tmp <- c(1 = "foo", 2 = "bar", 3 = "baz")
name <- c(1,2,3)
val <- c("foo", "bar", "baz")
names(val) <- name
val <- c(val, c(4 = "snafu"))
val <- c(val, c("4" = "snafu"))
val[4]
val <- c(val, c("8" = "fu"))
val[8]
val["8"]
val["1"]
type(names(val))
str(names(val))
typeof(names(val))
val <- c("foo" = 1, "bar" = 2, "baz" = 3, "snafu" = 4, "fu" = 5)
check <- names(val) != "baz"
val.2 <- val[check]
val.2
val.3 <- val[names(val) != "baz"]
val.3
6/2*(1+2)
2(1+2)
q()
1993 // 10
1993 / 10L
1993L / 10L
1993L %% 10L
1993L %/% 10L
1993 %/% 10
checking <- read.csv(file.choose())
checking <- read.csv(file.choose())
View(checking)
checking <- read.csv(file.choose(), missing = "")
?read.csv
checking <- read.csv(file.choose(), na.strings = "")
setwd("~/In Class Notes/Springboard/capstone projects/Visualizing_Gov_Nets/shiny/VGN-v1 21aug17")
fs.el <- read.csv( "data/fs_2015_el.csv ")
source('~/In Class Notes/Springboard/capstone projects/vis gov working code.R')
joined <- rbind(is.el, pc.el)
rm(joined)
union.el <- unique( rbind( is.el, ta.el, pc.el, rt.el, fs.el ) )
org.list <- ( "data/org_list.csv" )
org.list <- read.csv( "data/org_list.csv" )
View(org.list)
org.list <- read.csv( "data/org_list.csv" )
shiny::runApp()
runApp()
source('~/Academic Literature/Methodology/R scripts/find bad nodes in el.R')
find.bad.nodes(is.el, org.list)
View(org.list)
View(is.el)
View(table(is.el$from))
View(table(is.el$to))
View(V(graph.data.frame(is.el)))
V(graph.data.frame(is.el))
net <- graph.data.frame(is.el, directed = F, vertices = org.list)
plot(net)
runApp()
runApp()
bad.nodes <- find.bad.nodes(union.el, org.list)
View(bad.nodes)
View(is.el)
bad.nodes <- find.bad.nodes(union.el, org.list)
View(bad.nodes)
net <- graph.data.frame(union.el, directed = F, vertices = org.list)
plot(net)
View(org.list)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(bad.nodes)
save.image("~/In Class Notes/Springboard/capstone projects/gov nets python data processing/shiny app development R workspace 21aug17.RData")
